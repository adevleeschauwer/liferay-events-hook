package com.liferay.events.global.mobile.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the EventPollAnswer service. Represents a row in the &quot;Matcher_EventPollAnswer&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.events.global.mobile.model.impl.EventPollAnswerModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.events.global.mobile.model.impl.EventPollAnswerImpl}.
 * </p>
 *
 * @author James Falkner
 * @see EventPollAnswer
 * @see com.liferay.events.global.mobile.model.impl.EventPollAnswerImpl
 * @see com.liferay.events.global.mobile.model.impl.EventPollAnswerModelImpl
 * @generated
 */
public interface EventPollAnswerModel extends BaseModel<EventPollAnswer> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a event poll answer model instance should use the {@link EventPollAnswer} interface instead.
     */

    /**
     * Returns the primary key of this event poll answer.
     *
     * @return the primary key of this event poll answer
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this event poll answer.
     *
     * @param primaryKey the primary key of this event poll answer
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the question ID of this event poll answer.
     *
     * @return the question ID of this event poll answer
     */
    public long getQuestionId();

    /**
     * Sets the question ID of this event poll answer.
     *
     * @param questionId the question ID of this event poll answer
     */
    public void setQuestionId(long questionId);

    /**
     * Returns the client ID of this event poll answer.
     *
     * @return the client ID of this event poll answer
     */
    @AutoEscape
    public String getClientId();

    /**
     * Sets the client ID of this event poll answer.
     *
     * @param clientId the client ID of this event poll answer
     */
    public void setClientId(String clientId);

    /**
     * Returns the payload of this event poll answer.
     *
     * @return the payload of this event poll answer
     */
    @AutoEscape
    public String getPayload();

    /**
     * Sets the payload of this event poll answer.
     *
     * @param payload the payload of this event poll answer
     */
    public void setPayload(String payload);

    /**
     * Returns the answer of this event poll answer.
     *
     * @return the answer of this event poll answer
     */
    @AutoEscape
    public String getAnswer();

    /**
     * Sets the answer of this event poll answer.
     *
     * @param answer the answer of this event poll answer
     */
    public void setAnswer(String answer);

    /**
     * Returns the create date of this event poll answer.
     *
     * @return the create date of this event poll answer
     */
    public Date getCreateDate();

    /**
     * Sets the create date of this event poll answer.
     *
     * @param createDate the create date of this event poll answer
     */
    public void setCreateDate(Date createDate);

    /**
     * Returns the answer ID of this event poll answer.
     *
     * @return the answer ID of this event poll answer
     */
    public long getAnswerId();

    /**
     * Sets the answer ID of this event poll answer.
     *
     * @param answerId the answer ID of this event poll answer
     */
    public void setAnswerId(long answerId);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(
        com.liferay.events.global.mobile.model.EventPollAnswer eventPollAnswer);

    @Override
    public int hashCode();

    @Override
    public CacheModel<com.liferay.events.global.mobile.model.EventPollAnswer> toCacheModel();

    @Override
    public com.liferay.events.global.mobile.model.EventPollAnswer toEscapedModel();

    @Override
    public com.liferay.events.global.mobile.model.EventPollAnswer toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
